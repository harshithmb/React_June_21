{"version":3,"sources":["components/Topbar/Topbar.module.css","components/Topbar/index.js","components/PlacesGrid/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Navbar","Component","PureComponent","nextProps","nextState","cartProp","this","props","length","Products","state","name","products","map","item","addToCart","Product","onClick","Child","window","localStorage","setItem","console","log","removeItem","useState","setProducts","useEffect","axios","then","res","data","catch","err","alert","preview","src","width","App","Footer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,QAAU,0B,uIC2MtBC,GAxMeC,YAwEDA,YAqFGC,gB,2KA4CrB,SAAsBC,EAAWC,GAC/B,QAAID,EAAUE,SAAW,K,oBAM3B,WACE,OAAO,wCAAWC,KAAKC,MAAMF,SAASG,c,GATrBP,cAYfQ,E,4MACJC,MAAQ,CAAEC,KAAM,K,4CAChB,WAAU,IAAD,OACP,OACE,8BACGL,KAAKC,MAAMK,SAASC,KAAI,SAACC,GAAD,OACvB,cAAC,EAAD,CAASA,KAAMA,EAAMC,UAAW,EAAKR,MAAMQ,qB,GAN9Bd,aAajBe,EAAU,SAAC,GAAyB,IAAvBD,EAAsB,EAAtBA,UAAWD,EAAW,EAAXA,KAC5B,OAAO,oBAAIG,QAAS,kBAAMF,EAAUD,IAA7B,SAAqCA,K,gBC/KxCI,GArDmBhB,gB,kDAsDvB,WAAYK,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,GAFI,E,qDAInB,WACES,OAAOC,aAAaC,QAAQ,OAAQ,Y,kCAEtC,WACEC,QAAQC,IAAI,cACZJ,OAAOC,aAAaI,WAAW,U,oBAEjC,WACE,OAAO,qD,GAbSvB,c,QCpBLQ,EAhCE,WACf,MAAgCgB,mBAAS,IAAzC,mBAAOb,EAAP,KAAiBc,EAAjB,KAkBA,OAhBAC,qBAAU,WACRC,IAAM,uDACHC,MAAK,SAACC,GACLJ,EAAYI,EAAIC,SAEjBC,OAAM,SAACC,GAAD,OAASC,MAAMD,QACvB,IAEHN,qBAAU,eAEVA,qBAAU,WACR,OAAO,eAGN,IAGD,mCACGf,EAASJ,QACRI,EAASC,KAAI,gBAAGF,EAAH,EAAGA,KAAMwB,EAAT,EAASA,QAAT,OACX,qCACE,qBAAKC,IAAKD,EAASE,MAAM,QACzB,6BAAK1B,aCXF2B,EAXH,WAEV,OACE,mCAGE,cAACC,EAAD,OCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f4134b1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Topbar_heading__E78aA\"};","import React, { Component, PureComponent } from \"react\";\r\nimport { convertToUpper as toUpper, mockData } from \"../../utils/constants\";\r\nimport styles from \"./Topbar.module.css\";\r\n\r\nclass Parent extends Component {\r\n  //ccc\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0,\r\n      loader: true,\r\n      products: [],\r\n    };\r\n    console.log(\"First Call Constructor Parent\");\r\n  }\r\n\r\n  updateCountMethod(number) {\r\n    this.setState({ count: number });\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"third Call componentDidMount Parent\");\r\n    fetch(\"https://5d76bf96515d1a0014085cf9.mockapi.io/product\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        // this.setState({\r\n        //   products: res, // new products\r\n        //   loader: false,\r\n        // });\r\n      });\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    console.log(\"shouldComponentUpdate\");\r\n    if (nextState.products.length !== this.state.products.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"API request in UPDATE Phase\");\r\n  }\r\n  render() {\r\n    console.log(\"Second Call Render Parent\", React.version);\r\n    const { loader, products } = this.state;\r\n    return (\r\n      <div>\r\n        {loader ? (\r\n          <h1>Loading...</h1>\r\n        ) : (\r\n          products.length &&\r\n          products.map(({ name, preview }) => (\r\n            <div>\r\n              <img src={preview} width={200} />\r\n              <h1\r\n                onClick={() => {\r\n                  console.log(name);\r\n                }}\r\n              >\r\n                {name}\r\n              </h1>\r\n            </div>\r\n          ))\r\n        )}\r\n        {/* \r\n        <Child\r\n          count={this.state.count}\r\n          updateCount={(num) => this.updateCountMethod(num)}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//export default Parent;\r\n\r\nclass Child extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: \"Child\" };\r\n    console.log(\"First Call Constructor Child\");\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ name: \"Child_CHANGE\" });\r\n    console.log(\"third Call componentDidMount Child\");\r\n  }\r\n  render() {\r\n    console.log(\"Second Call Render Child\");\r\n    return (\r\n      <div>\r\n        <h1>\r\n          {this.state.name} - {this.props.count}\r\n        </h1>\r\n        <button onClick={() => this.props.updateCount(123)}>\r\n          Click to Increment\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// class TopBar extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       name: this.props.username, // Sachin\r\n//       age: 10,\r\n//       count: 0,\r\n//     };\r\n//     console.log(\"Constructor First Call\");\r\n//   }\r\n//   updateData = () => {\r\n//     this.setState({ name: \"Anil\" });\r\n//     this.setState({ name: \"Gitnash\" });\r\n//     this.setState({ name: \"Tushar\", age: 123 });\r\n//   };\r\n\r\n//   render() {\r\n//     console.log(\"Second Call\");\r\n//     const { count } = this.state;\r\n//     return (\r\n//       <div>\r\n//         <h1 className={styles.heading}>Count - {count}</h1>\r\n\r\n//         <button\r\n//           onClick={() =>\r\n//             this.setState({\r\n//               count:\r\n//                 this.state.count <= 10 ? ++this.state.count : this.state.count,\r\n//             })\r\n//           }\r\n//         >\r\n//           +\r\n//         </button>\r\n//         <button\r\n//           onClick={() =>\r\n//             this.setState({\r\n//               count:\r\n//                 this.state.count <= 0 ? this.state.count : --this.state.count,\r\n//             })\r\n//           }\r\n//         >\r\n//           -\r\n//         </button>\r\n//         <h5>{this.props.username}</h5>\r\n//         <button onClick={this.updateData}>Click</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // const TopBar = (props) => {\r\n// //   return (\r\n// //     <div>\r\n// //       <h1 className={styles.heading}> {toUpper(props.name)}</h1>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// export default TopBar;\r\n\r\nclass Parent_1 extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0,\r\n      cart: [],\r\n      products: [\"Sachin\", \"Yash\", \"X\"],\r\n    };\r\n  } // compoenentDidMount //First render\r\n  //componentDidUpdate //  3rd Call Update Phase\r\n\r\n  //shouldComponentUpdate 1st call Update Phase\r\n\r\n  // 5 +\r\n  // 0 -\r\n  shouldComponentUpdate(nextProps, nextState) {}\r\n  handleCount() {\r\n    return [];\r\n  }\r\n  render() {\r\n    // 2nd Call Update\r\n    return (\r\n      <div>\r\n        {this.state.count}\r\n        <button>-</button>\r\n        <button>+</button>\r\n        <input\r\n          onChange={(e) => this.setState({ searchValue: e.target.value })}\r\n        />\r\n        <button onClick={() => {}}>Submit</button>\r\n        <Navbar cartProp={this.state.cart} />\r\n        <Products\r\n          products={this.state.products}\r\n          addToCart={(data) =>\r\n            this.setState({ cart: [...this.state.cart, data] })\r\n          } // this.forceUpdate({cart: \"\"}) bypass shouldComponentUpdate\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Parent_1;\r\n\r\nclass Navbar extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps.cartProp > 1) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  render() {\r\n    return <div>Cart {this.props.cartProp.length}</div>;\r\n  }\r\n}\r\nclass Products extends Component {\r\n  state = { name: \"A\" };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.products.map((item) => (\r\n          <Product item={item} addToCart={this.props.addToCart} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Product = ({ addToCart, item }) => {\r\n  return <h1 onClick={() => addToCart(item)}>{item}</h1>;\r\n};\r\n","import axios from \"axios\";\r\nimport React, { Component, Fragment, PureComponent } from \"react\";\r\nclass PlacesGrid extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      child: true,\r\n      count: 0,\r\n      tree: [{ a: 1, b: [1, 2, 3] }],\r\n      todos: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      this.setState({ count: 123 });\r\n    }, 1000);\r\n\r\n    axios.get(\"https://jsonplaceholder.typicode.com/todos/\").then((res) => {\r\n      this.setState({ todos: res.data });\r\n    });\r\n    axios({\r\n      method: \"get\", // post\r\n      url: \"https://jsonplaceholder.typicode.com/todos/\",\r\n      data: {\r\n        name: \"Aakash\",\r\n      },\r\n      params: {\r\n        id: 123,\r\n      },\r\n      header: {},\r\n    })\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.log(\"Error\", err));\r\n  }\r\n  //deep JSON.parse\r\n\r\n  render() {\r\n    console.log(\"Render Called\");\r\n    const { todos } = this.state;\r\n    return (\r\n      <>\r\n        {this.state.count}\r\n        <button onClick={() => this.setState({ child: !this.state.child })}>\r\n          Show/Hide\r\n        </button>\r\n        {todos.length && todos.map((item) => <h1>{item.title}</h1>)}\r\n        {this.state.child ? <Child /> : \"\"}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlacesGrid;\r\n\r\nclass Child extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    window.localStorage.setItem(\"name\", \"Aakash\");\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"Child Dies\");\r\n    window.localStorage.removeItem(\"name\");\r\n  }\r\n  render() {\r\n    return <h1>Child Component</h1>;\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios(\"https://5d76bf96515d1a0014085cf9.mockapi.io/product\")\r\n      .then((res) => {\r\n        setProducts(res.data);\r\n      })\r\n      .catch((err) => alert(err));\r\n  }, []); //componentDidmount\r\n\r\n  useEffect(() => {}); //componentDidmount and DidUpdate\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      //clean Up Code\r\n    };\r\n  }, []); // componentWillUnmount\r\n\r\n  return (\r\n    <>\r\n      {products.length &&\r\n        products.map(({ name, preview }) => (\r\n          <>\r\n            <img src={preview} width=\"200\" />\r\n            <h1>{name}</h1>\r\n          </>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React from \"react\"; // imr\n//Components\nimport Topbar from \"./components/Topbar\";\nimport PlacesGrid from \"./components/PlacesGrid\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  // sfc\n  return (\n    <>\n      {/* <Topbar username=\"Sachin\" flag={true} data={[]} /> */}\n      {/* <PlacesGrid /> */}\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}